2008-03-16  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datahandler.hg: Clarified documentation.

3.0.0:

2008-03-16  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py
	* libgda/src/dictconstraint.hg: Comment out fkey_set_fields() because 
	we do not yet have a wrapper for GdaDictConstraintFkeyPair.
	* libgda/src/dictfield.hg: Added table and entry-plugin properties.
	* libgda/src/dicttable.hg: Added db and is-view properties.
	* libgda/src/row.hg: Added row property.

	* tools/m4/convert_libgdamm.m4:
	* libgda/src/serveroperation.hg: Added get_node_type().

	* libgda/src/entity.hg: Added signals, though not really because we 
	do not have .defs for these yet.
	* libgda/src/entityfield.hg: Removed vfuncs which probaly have 
	incorrect refcounting. We can work on this for libgdamm 4.0.

2008-03-01  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/dictfield.ccg:
	* libgda/src/dictfield.hg: get_constraints(), 
	* libgda/src/dictfunction.hg: get_arg_dict_types((), 
	* libgda/src/dicttable.hg: get_parents(), get_constraints(),
	* libgda/src/dicttype.hg: get_synonyms(),
	* libgda/src/entity.hg: get_fields(): Use ListHandles.

	* libgda/src/queryfieldvalue.hg: Added get_is_parameter().
	* libgda/src/dictdatabase.hg: update_progress(): 
	Corrected int to guint for parameters.

2.9.82:

2008-03-01  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Use tar-ustar with AM_INIT_AUTOMAKE() so we can 
	dist the long filenames generated by doxygen. This is based on what 
	we do in gtkmm.

2008-03-01  Stefan Potyra  <stefan.potyra@informatik.uni-erlangen.de>

	* configure.in: Increase the first number in LIBGDAMM_SO_VERSION, 
	to change the .so name to indicate the build breakage in 2.9.81, 
	wanted by Ubuntu (launchpad bug 190744).

	Note from Murray: We do not normally use that version string much 
	because it just causes problems and there is no way to indicate 
	breakage of unstable parts while showing that the whole thing has only 
	API additions when comparing major stable releases. But libgdamm has 
	never yet been API stable so we can do it this time.

2008-01-28  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/column.hg:
	* libgda/src/dictdatabase.hg: Added a string conversion for the signal, 
	because this is no longer in the .m4 file installed by glibmm.

2007-12-31  Armin Burgmeier  <armin@openismus.com>

	* configure.in: Detect whether building for Windows (copied from
	glibmm) and added AC_LIBTOOL_WIN32_DLL to create a shared library.

	* build_shared/Makefile_build.am_fragment: Link with  -no-undefined on
	Windows, otherwise libtool does not create a DLL because undefined
	symbols are not allowed in Windows DLLs.

2.9.81:

2007-11-18  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/blobop.hg:
	* libgda/src/column.hg:
	* libgda/src/columnindex.hg:
	* libgda/src/connection.hg:
	* libgda/src/dictdatabase.hg:
	* libgda/src/parameter.hg:
	* libgda/src/queryfieldvalue.hg:
	* libgda/src/row.hg:
	* libgda/src/serveroperation.hg:
	Remove trailing ;s to avoid warnings when --pedantic is used with 
	gcc.

2007-09-30  Armin Burgmeier  <armin@openismus.com>

	* examples/simple/main.cc:
	* examples/simple_iter/main.cc: Fixed build with disabled exceptions.

2007-09-28  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h: Added get_ulong() and set_ulong() and 
	a constructor.

2007-09-27  Murray Cumming  <murrayc@murrayc.com>

	* examples/simple/main.cc: Add a cnc_string to the DataSourceInfo to 
	specify the table, to make this work. Catch exceptions.
	* examples/simple_iter/main.cc: Use a full cnc_string instead of a 
	DataSourceInfo, to show how that is done.
	* libgda/src/datamodel.hg: describe_column(): Use refreturn to avoid 
	a reference-counting problem.

2007-09-27  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* examples/Makefile.am:
	* examples/simple_iter/main.cc: Added an example that uses ITER_MODEL_ONLY.
	This does not actually work, and the simple example probably doesn't work either, 
	because we have not specified a table name - see bug #480860. Everybody must 
	be using the DSN string instead of the DataSourceInfo.

2007-09-25  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connectionevent.hg: Put the enums inside the Gnome::Gda namespace instead of 
	inside Gnome::.

2007-09-17  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg: Added execute_select_command() and execute_non_select_command() that 
	take the command as a string and that take a parameter list, for convenience.
	* libgda/src/parameterlist.hg: Remove add_param_*() methods, because we already have add_parameter() 
	methods that wrap the same C functions. Ref the return, to avoid a crash. None of these could have 
	worked before.

2.9.8:

2007-09-10  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/value.cc: set(Glib::Date): Correctly initialize 
	the GValue, so that the date is actually used. 

2007-06-20  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h: Rename set(GType) to set_g_type(GType) because 
	it is ambiguous with set(int) (or maybe set(guint)). I do not know why this 
	is only a problem now.

2.9.7:

2007-06-14  Murray Cumming  <murrayc@murrayc.com>

	* Makefile.am:
	* README:
	* COPYING.examples: Added GPL text, requested by the Ubuntu maintainer, 
	because the examples are GPL, though the library is LGPL.

	* libgda/src/dictconstraint.hg: pkey_set_fields(), pkey_get_fields(), 
	fkey_set_fields(), fkey_set_actions(), fkey_get_actions(), 
	unique_set_fields(), unique_get_fields(): Use SListHandle, so the 
	application coder can use standard C++ containers.
	These function names are not very nice.
2.9.6:

2007-06-10  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/config.cc: get_provider_by_name(), get_providers(): 
	Avoid freeing memory that we don't own.
	get_value_string(): Avoid leaking memory

2007-05-05  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/Doxyfile.in: Use the Doxygen tag files with relevant paths, 
	assuming that everything is checked out at the same level, as with 
	jhbuild.
	* docs/reference/Makefile.am:
	* docs/reference/libgdamm_header.html_fragment:
	Correct the upload path, now that this is on gtkmm.org.

2.9.5:

2007-04-24  Yselkowitz <yselkowitz@users.sourceforge.net>

        * scripts/macros.m4: Check for both m4 and M4 in the GNU m4 output,
        to fix the build on some platforms.
        Bug #423990

2007-03-30  Armin Burgmeier  <armin@openismus.com>

	* libgda/libgdamm/value.h:
	* libgda/libgdamm/value.cc: Removed Gnome::Gda::value_compare,
	Gnome::Gda::value_compare_ext and Gnome::Gda::value_equal. There is
	Gnome::Gda::Value::operator== to test for equality. Furthermore,
	Gnome::Gda::value_compare was not even defined, so I don't think these
	are really used. I just commented them out so we can re-enable them
	when required.

2007-03-29  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/serverprovider.hg:
	* libgda/src/serverprovider.ccg: Wrapped
	gda_server_provider_get_value_at and gda_server_provider_set_value_at.

2007-03-27  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/parameter.hg:
	* libgda/src/parameter.ccg: Added a set_entry_plugin() convenience
	function.

2.9.4:

2007-03-23  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/libgda_methods.defs: Regenerated.

	* libgda/src/datamodel.hg: Wrapped gda_data_model_import_from_model
	and gda_data_model_emit_signal_changed, ignore
	gda_data_model_array_copy_model since this belongs to
	GdaDataModelArray.

	* libgda/src/datamodeliter.hg:
	* libgda/src/dict.hg:
	* libgda/src/query.hg:
	* libgda/src/datamodeliter.ccg: Wrapped error values, and include
	gda-enum-types.h in datamodeliter.cc, so that it compiles.

	* libgda/src/parameterlist.hg:
	* libgda/src/parameterlist.ccg: Wrapped
	gda_parameter_list_find_param_for_user().

2007-03-20  Armin Burgmeier  <armin@openismus.com>
	
	* libgda/src/column.ccg:
	* libgda/src/dictfield.ccg:
	* libgda/src/datamodel.ccg:
	* libgda/src/parameterlist.ccg:
	* libgda/src/datahandler.ccg:
	* libgda/src/row.ccg: Call Value constructor with the GValue* as
	argument in functions returning a Gnome::Gda::Value, so that it also
	works if the value exists but is null.

	* libgda/libgdamm/value.cc: Added explicit check for values that have an
	underlaying GValue but which is null in Value::compare().

2007-03-18  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/parameter.hg:
	* libgda/src/parameter.ccg: Set g-type property on construction as the
	C implementation does, otherwise the value is always NULL. Added a
	constructor that takes a const char*, otherwise
	Parameter::create("foo", "bar") calls actually
	Parameter::create(ustring, bool). Just call Value constructor with the
	GValue* as argument in get_value() and get_default_value(). This works
	also if the value is NULL.

2007-03-18  Armin Burgmeier  <armin@openismus.com>

	* libgda/libgdamm/value.cc: Make sure that the underlaying GValue has
	the correct type before setting a new value.

2007-03-11  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/dictfunction.hg: Changed GDA_DICT_TYPE to
	GDA_DICT_FUNCTION in _CLASS_GOBJECT invocation.

2007-03-09  Armin Burgmeier  <armin@openismus.com>

	* libgda/libgdamm/value.h:
	* libgda/libgdamm/value.cc: Renamed the setters for int64 to
	set_int64() and set_uint64() respectively, to avoid conflicts with
	set(GType), which is a gulong (and therefore a guint64) on 64 bit
	systems.

	* libgda/libgdamm.h: Added libgdamm/serveroperation.h to includes.

2007-02-28  Johannes Schmid <johannes.schmid@openismus.com>

	* TODO:
	Removed items that are already done
	
	* libgda/src/blob.hg:
	* libgda/src/client.hg:
	* libgda/src/column.hg:
	* libgda/src/columnindex.hg:
	* libgda/src/command.hg:
	* libgda/src/connection.hg:
	* libgda/src/connectionevent.hg:
	* libgda/src/datamodel.hg:
	* libgda/src/datamodeliter.hg:
	* libgda/src/datamodelrow.hg:
	* libgda/src/dictfunction.hg:
	* libgda/src/entity.hg:
	* libgda/src/entityfield.hg:
	* libgda/src/object.hg:
	* libgda/src/parameter.hg:
	* libgda/src/parameterlist.hg:
	* libgda/src/query.hg:
	* libgda/src/queryfield.hg:
	* libgda/src/queryfieldfunc.hg:
	* libgda/src/referer.hg:
	* libgda/src/renderer.hg:
	* libgda/src/serveroperation.hg:
	* libgda/src/serverprovider.hg:
	* libgda/src/transactionstatus.hg:
	* libgda/src/xmlstorage.hg:
	
	Added groups for all classes that have documentation and fixed
	the trivial doxygen errors.

2007-02-27  Johannes Schmid <johannes.schmid@openismus.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/dictfunction.ccg:
	* libgda/src/dictfunction.hg:
	* libgda/src/queryfieldfunc.ccg:
	* libgda/src/queryfieldfunc.hg:
	* tools/m4/convert_libgdamm.m4:
	
	Wrapped GdaDictFunction and GdaQueryFieldFunc

2007-02-25  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/connection.hg:
	* libgda/src/connection.ccg:
	* libgda/src/parameterlist.ccg:
	* libgda/src/serverprovider.hg:
	* libgda/src/serverprovider.ccg:
	* libgda/src/datamodelrow.hg:
	* libgda/src/parameterlist.hg:
	* examples/introspection/main.cc:
	* examples/simple/main.cc: Made libgdamm build without exceptions
	enabled.

2007-02-25  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/parameterlist.hg:
	* libgda/src/parameterlist.ccg: Added convenience function to restrict
	the values of a paremeter with given name.

2007-02-15  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/queryjoin.ccg:
	* libgda/src/queryjoin.hg:
	* libgda/src/Makefile_list_of_hg.am_fragment: Wrapped GdaQueryJoin.

	* libgda/src/query.hg: Wrapped functions that deal with joins, wrapped
	signals.

	* libgda/src/entityfield.hg: Wrapped gda_entity_field_set_type().

	* libgda/src/datamodel.hg: Removed wrapper for
	gda_data_model_get_column_position() because that method does not
	exist anymore.

	* tools/m4/convert_libgdamm.m4: Added new conversions.

2007-02-15  Johannes Schmid  <johannes.schmid@openismus.com>

	* configure.in:
	* debian/changelog:
	* debian/compat:
	* debian/control:
	* debian/copyright:
	* debian/libgdamm-dev.install:
	* debian/libgdamm-doc.doc-base.libgdamm-reference:
	* debian/libgdamm-doc.docs:
	* debian/libgdamm-doc.install:
	* debian/libgdamm.install:
	* debian/rules:
	* docs/Makefile.am:
	Added debian package and an --enable-referece switch to
	configure. As libgda debian package does not yet exist, 
	the depency information is currently wrong!

2007-02-15  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/client.hg: Correct function names mentioned in the class overview 
	documentation.

2007-02-15  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.hg: Add documentation for execute*() methods.
	* libgda/src/datamodel.hg: Add get_column_position(), set_values().
	Corrected the doxygen comments for export_to_file() and export_to_string().
	These must be reformatted for doxygen. gtk-doc format is different.
	* libgda/src/datamodelarray.hg: Added commented-out 
	gda_data_model_array_copy_model() constructor.
	* tools/m4/convert_libgdamm.m4: Moved some ListHandle conversions into the .hg files, 
	because the ownership could be specific to the method.

2007-02-14  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg:
	* libgda/src/dicttype.hg:
	* libgda/src/entityfield.hg:
	* libgda/src/parameter.hg:
	* libgda/src/dictconstraint.hg:
	* libgda/src/referer.hg:
	* libgda/src/queryfield.hg:
	* libgda/src/dict.hg:
	* libgda/src/dataproxy.hg:
	* libgda/src/serverprovider.hg:
	* libgda/src/datamodelindex.hg:
	* libgda/src/dictdatabase.hg: Wrapped some missing methods, properties
	and signals.

	* libgda/src/Makefile_list_of_hg.am_fragment: Restored alphabetical
	order.

	* tools/m4/convert_libgdamm.m4: Added new conversions.

	* tools/extra_defs_gen/generate_defs_gda.cc: Added
	GDA_TYPE_DICT_CONSTRAINT, GDA_TYPE_DICT_DATABASE and
	GDA_TYPE_DICT_FIELD:

	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_others.defs:
	* libgda/src/libgda_signals.defs:
	* libgda/src/libgda_vfuncs.defs: Regenerated.

2007-02-14  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/Doxyfile.in:
	* docs/reference/libgdamm_footer.html_fragment:
	* docs/reference/libgdamm_header.html_fragment: Added headers and footers.

2.9.2:

2007-02-12  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datahandler.ccg:
	* libgda/src/datamodel.ccg:
	* libgda/src/dictfield.ccg:
	* libgda/src/dictfield.hg:
	* libgda/src/libgda_methods.defs:
	* libgda/src/parameter.ccg:
	* libgda/src/queryfieldvalue.hg:
	* libgda/src/row.ccg: Updated for latest API changes.

2007-02-12  Johannes Schmid <johannes.schmid@openismus.com>

	* libgda/src/parameterlist.ccg:
	* libgda/src/parameterlist.hg:
	Added constructor for NULL argument (to fix examples...)
	
2007-02-12  Johannes Schmid <johannes.schmid@openismus.com>

	* libgda/src/parameterlist.ccg:
	* libgda/src/parameterlist.hg:
	* tools/m4/convert_libgdamm.m4:
	
	Added proper constructors for Gda::ParameterList. The xml constructors are ommitted (see #340989)

2007-02-10  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datahandler.hg:
	* libgda/src/entity.hg:
	* libgda/src/entityfield.hg:
	* libgda/src/queryobject.hg:
	* libgda/src/referer.hg:
	* libgda/src/renderer.hg: Define groups with defgroup.

2007-02-10  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/blob.hg:
	* libgda/src/blobop.hg:
	* libgda/src/client.hg:
	* libgda/src/column.hg:
	* libgda/src/columnindex.hg:
	* libgda/src/command.hg:
	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	* libgda/src/connectionevent.hg:
	* libgda/src/datahandler.hg:
	* libgda/src/datamodelarray.hg:
	* libgda/src/datamodelfiltersql.hg:
	* libgda/src/datamodelhash.hg:
	* libgda/src/datamodelimport.hg:
	* libgda/src/datamodelindex.hg:
	* libgda/src/datamodelquery.hg:
	* libgda/src/datasourceinfo.hg:
	* libgda/src/dict.ccg:
	* libgda/src/dict.hg:
	* libgda/src/dictconstraint.hg:
	* libgda/src/dictfield.hg:
	* libgda/src/dictfunction.hg:
	* libgda/src/dicttable.hg:
	* libgda/src/entity.hg:
	* libgda/src/entityfield.hg:
	* libgda/src/handlerbin.hg:
	* libgda/src/handlerboolean.hg:
	* libgda/src/handlernumerical.hg:
	* libgda/src/handlerstring.hg:
	* libgda/src/handlertime.hg:
	* libgda/src/handlertype.hg:
	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_others.defs:
	* libgda/src/object.hg:
	* libgda/src/parameter.hg:
	* libgda/src/parameterlist.hg:
	* libgda/src/providerinfo.hg:
	* libgda/src/query.hg:
	* libgda/src/querycondition.hg:
	* libgda/src/queryfield.hg:
	* libgda/src/queryfieldagg.hg:
	* libgda/src/queryfieldall.hg:
	* libgda/src/queryfieldfield.hg:
	* libgda/src/queryfieldvalue.hg:
	* libgda/src/queryobject.hg:
	* libgda/src/querytarget.hg:
	* libgda/src/referer.hg:
	* libgda/src/renderer.hg:
	* libgda/src/row.hg:
	* libgda/src/serveroperation.hg:
	* libgda/src/serverprovider.hg:
	* libgda/src/transactionstatus.hg:
	* tools/m4/convert_libgdamm.m4: Added lots of class documentation, 
	and dealt with some minor TODOs.

2007-02-10  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/queryfieldfield.ccg:
	* libgda/src/queryfieldfield.hg: Added QueryFieldField(query, field,
	target, value_provider) convenience constructor.

	* libgda/src/query.ccg:
	* libgda/src/query.hg: Added another constructor that takes a query
	type, added default arguments for set_order_by_field().

2007-02-09  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/Doxyfile.in:
	* docs/reference/Makefile.am: Use glibmm tags to link to 
	glibmm documentation where appropriate.
	And upload to a temporary location.
	* docs/reference/glibmm_doxygen_tags: Added, using a 
	copy rather than a relative path, for convenience.
	* libgda/src/libgda_docs.xml: Regenerated.

2007-02-09  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_enums.defs:
	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_signals.defs: Regenerated.
	* libgda/src/connection.hg:

	* libgda/src/datamodel.hg:
	* libgda/src/dataproxy.hg:
	* libgda/src/dictfield.hg:
	* libgda/src/object.hg:
	* tools/m4/convert_libgdamm.m4: Updated for changed parameter types.

2007-02-05  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_methods.defs:
	* libgda/src/query.hg: Renamed is_modif_query() to is_modify_query(), 
	and use the new C function name.
	* libgda/src/queryfieldvalue.hg: set_is_parameter(), set_not_null(): 
	Add default parameter value.

2007-02-04  Armin Burgmeier  <armin@openismus.com>

	* libgda/libgdamm/value.h:
	* libgda/libgdamm/value.cc: Added set(const char*) overload, otherwise
	the Value(const char*) constructor calls set(bool) after having
	initialized the type to string.

2007-02-04  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/queryfieldvalue.ccg:
	* libgda/src/queryfieldvalue.hg:
	* libgda/src/Makefile_list_of_hg.am_fragment: Wrapped
	GdaQueryFieldValue.

	* tools/m4/convert_libgdamm.m4: Added needed conversions.

	* libgda/src/query.hg: Wrapped set/get_condition.

	* libgda/libgdamm.h: Added queryfieldvalue.h to includes.

2007-02-04  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/queryfieldfield.hg:
	* libgda/src/queryfieldfield.ccg: Added QueryFieldField(query, field,
	target) convenience constructor.

	* libgda/src/querycondition.ccg:
	* libgda/src/querycondition.hg:
	* libgda/src/Makefile_list_of_hg.am_fragment: Wrapped
	GdaQueryCondition.

	* tools/extra_defs_gen/generate_defs_gda.cc:
	* libgda/src/libgda_signals.defs: Added GdaQueryCondition and
	GdaQueryJoin and regenerated libgda_signals.defs.

	* tools/m4/convert_libgdamm.m4: Added needed conversions.

2007-02-03  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/queryfieldfield.ccg: 
	* libgda/src/queryfieldfield.hg:
	* libgda/src/queryfieldall.hg:
	* libgda/src/queryfieldall.ccg:
	* libgda/src/Makefile_list_of_hg.am_fragment: Wrapped
	GdaQueryFieldField, GdaQueryFieldAll.

	* tools/extra_defs_gen/generate_defs_gda.cc:
	* libgda/src/libgda_signals.defs: Added GdaQueryField* classes to
	output and regenerated libgda_signals.defs.

	* libgda/libgdamm.h: Added libgdamm/queryfieldagg.h,
	libgdamm/queryfieldall.h, libgdamm/queryfieldfield.h.

2007-02-03  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/query.hg: Fixed some missing refreturns

	* libgda/src/dictfield.hg: Fixed _CLASS_GOBJECT invocation (third
	parameter was GDA_DICT_TYPE instead of GDA_DICT_FIELD).

	* libgda/src/querytarget.ccg: Fixed order of properties in _CONSTRUCT
	macro to match the one gda_query_target_new uses.

2007-02-02  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/querytarget.hg:
	* libgda/src/querytarget.ccg:
	* libgda/src/Makefile_list_of_hg.am_fragment: Wrapped GdaQueryTarget.

	* tools/extra_defs_gen/generate_defs_gda.cc:
	* libgda/src/libgda_signals.defs: Added GDA_TYPE_QUERY_FIELD and
	GDA_TYPE_QUERY_TARGET to defs generation and regenerated
	libgda_signals.defs.

	* libgda/src/query.hg: Wrapped further GdaQuery API.

	* tools/m4/convert_libgdamm.m4: Added new conversions belonging to
	GdaQueryTarget.

2007-01-31  Johannes Schmid <johannes.schmid@openismus.com>

	* libgda/src/datamodel.hg:
	* tools/m4/convert_libgdamm.m4:
	Use Gda::DataModelter instead of GdaDataModelIter

	* libgda/src/object.hg:
	Enabled changed() signal as I might be useful

	* libgda/src/queryfield.ccg:
	* libgda/src/queryfield.hg:
	Fixed file header
	
2007-01-30  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/dictconstraint.ccg:
	* libgda/src/dictconstraint.hg:
	* libgda/src/dictfield.ccg:
	* libgda/src/dictfield.hg:
	* libgda/src/dictfunction.ccg:
	* libgda/src/dictfunction.hg:
	* libgda/src/dicttable.ccg:
	* libgda/src/dicttable.hg: Added new wrappers.
	* libgda/src/dictdatabase.hg: Uncommented methods that used these classes.
	* tools/m4/convert_libgdamm.m4: Added necessary conversions.
	* libgda/src/datamodelfiltersql.hg:
	* libgda/src/datamodelhash.hg: 
	* libgda/src/datamodelimport.hg: Added class documentation based on the documentation.


2007-01-30  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/datamodelfiltersql.ccg:
	* libgda/src/datamodelfiltersql.hg:
	* libgda/src/datamodelhash.ccg:
	* libgda/src/datamodelhash.hg:
	* libgda/src/datamodelimport.ccg:
	* libgda/src/datamodelimport.hg: Added wrappers.
	* libgda/src/datamodelarray.ccg:
	* libgda/src/transactionstatus.ccg: Use _CONSTRUCT() instead of using ConstructParams() directly.

2007-01-30  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/dict.hg:
	* libgda/src/dictaggregate.hg:
	* libgda/src/dictdatabase.ccg:
	* libgda/src/dictdatabase.hg:
	* libgda/src/dicttype.hg: Made them all inherit from Gda::Object, not Glib::Object, 
	and made them all implement the XmlStorage interface.
	Added class documentation based on the C documentation, and put them all in a Dictionaries 
	doxygen group. Wrapped some of their methods.
	Several Dict* objects still need to be wrapped.
	* libgda/src/xmlstorage.hg: Added class documentation.
	* tools/m4/convert_libgdamm.m4: Added necessary conversion.

2007-01-28  Murray Cumming  <murrayc@murrayc.com>

	* TODO: Added some stuff.
	* docs/reference/Makefile.am: Copy/pasted stuff from the hildon-libsmm equivalent.
	* libgda/src/client.hg:
	* libgda/src/connection.hg:
	* libgda/src/datamodel.hg:
	* libgda/src/datamodelarray.hg:
	* libgda/src/datamodelindex.hg:
	* libgda/src/datamodeliter.hg:
	* libgda/src/datamodelquery.hg:
	* libgda/src/datamodelrow.hg:
	* libgda/src/dataproxy.hg:
	* libgda/src/dict.hg:
	* libgda/src/entity.hg:
	* libgda/src/entityfield.hg:
	* libgda/src/object.hg:
	* libgda/src/parameter.ccg:
	* libgda/src/parameter.hg:
	* libgda/src/providerinfo.hg:
	* libgda/src/query.hg:
	* libgda/src/queryfield.hg:
	* libgda/src/queryfieldagg.hg:
	* libgda/src/row.hg:
	* libgda/src/serveroperation.hg:
	* libgda/src/serverprovider.hg:
	* tools/m4/convert_libgdamm.m4: Added lots of refreturn and constversion options, 
	added some const overloads, and made some methods const.

2007-01-27  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/dict.ccg:
	* libgda/src/dict.hg: Added overloads of update_dbms_meta_data() that 
	take 1 or no arguments.

2007-01-27  Armin Burgmeier  <armin@openismus.com>

	* libgda/libgdamm.h: Added datamodelarray.h.

	* libgda/libgdamm/value.h: Added ValueTraits struct and ValueList,
	ValueSList typedefs to handle GValue-containing GLists correctly.

	* libgda/src/dataproxy.hg:
	* libgda/src/dataproxy.ccg:
	* libgda/src/datamodel.hg: Adjusted to use ValueList for functions
	taking/returning lists of GValues. Also made
	GdaDataModel::create_iter() return a Glib::RefPtr<DataModelIter>
	instead of GdaDataModelIter*.

	* tools/m4/convert_libgdamm.m4: Added conversion from
	GdaDataModelIter* to Glib::RefPtr<DataModelIter>.

2.9.1:

2007-01-21  Johannes Schmid <johannes.schmid@openismus.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/queryfield.ccg:
	* libgda/src/queryfield.hg:
	* libgda/src/queryfieldagg.ccg:
	* libgda/src/queryfieldagg.hg:
	Wrapped GdaQueryField and GdaQueryFieldAgg

	* libgda/src/libgda_methods.defs:
	Regenerated (this time from correct sources...)

	* libgda/src/libgda_signals.defs:
	* libgda/src/parameterlist.ccg:
	* libgda/src/parameterlist.hg:
	Fixed GdaParameterList signals

	* libgda/src/blobop.hg:
	Wrapped read_all/write_all

	* libgda/src/parameter.ccg:
	* libgda/src/parameter.hg:
	Wrapped gda_parameter_get_alphanum_name
	
	* libgda/src/datamodelindex.hg:
	* libgda/src/object.hg:
	Added TODOs

	* tools/m4/convert_libgdamm.m4:
	Added new conversions
	
	* TODO:
	Added some more TODOs

2007-01-20  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Require glibmm 2.12, because we need the new Value::init(Value) method.

2007-01-19  Johannes Schmid <johannes.schmid@openismus.com>

	* libgda/src/connection.hg:
	* libgda/src/object.hg:
	* libgda/src/serverprovider.hg:
	* tools/m4/convert_libgdamm.m4:
	
	Wrapped even more unwrapped methods. Added TODO about methods taking a GType argument

2007-01-18  Johannes Schmid <johannes.schmid@openismus.com>

	* libgda/src/datamodelrow.hg
	* libgda/src/datamodelindex.hg:
	Wrapped some unwrapped methods
	
	* libgda/src/libgda_methods.defs:
	regenerated

2007-01-17  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/dataproxy.hg:
	* libgda/src/dataproxy.ccg:
	* libgda/src/Makefile_list_of_hg.am_fragment: Wrapped GdaDataProxy.

	* tools/extra_defs_gen/generate_defs_gda.cc: Added GDA_TYPE_DATA_PROXY
	to output.

	* libgda/src/libgda_signals.defs: Regenerated to contain properties
	and signals from GdaDataProxy.

2007-01-17  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/parameter.hg: Wrapped properties and signals.

	* libgda/src/datamodeliter.hg:
	* libgda/src/datamodeliter.ccg:
	* libgda/src/Makefile_list_of_hg.am_fragment: Wrapped
	GdaDataModelIter.

	* libgda/src/datamodelrow.hg: Added comment about missing create()
	method.

	* tools/extra_defs_gen/generate_defs_gda.cc:
	* libgda/src/libgda_signals.defs: Added GdaDataModelIter definitions
	to output and regenerated libgda_signals.defs.

	* libgda/src/parameterlist.hg: Added refreturn to find_param.

	* tools/m4/convert_libgdamm.m4: Added a new conversion.

2007-01-17  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/datamodelquery.hg: Made Gda::DataModelQuery actually
	derive from Gda::Object.

2007-01-16  Johannes Schmid <johannes.schmid@openismus.com>

	* libgda/src/datamodel.hg:
	* libgda/src/connection.hg:
	* libgda/src/client.hg:
	* libgda/src/libgda_signals.defs (regenerated):
	
	Fixed some unwrapped methods.

2007-01-13  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datamodelquery.ccg: Use _CONSTRUCT() macro instead of hard-coding 
	the construct implementation.

2007-01-13  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/datamodelquery.hg:
	* libgda/src/datamodelquery.ccg: Made Gda::DataModelQuery inherit from
	Gda::Object instead of Glib::Object, changed constructor to take a
	Gda::Query argument.

	* libgda/libgdamm.h: Added datamodelquery.h to includes.

2007-01-13  Johannes Schmid <johannes.schmid@openismus.com>

  * libgda/libgdamm-3.0.pc.in:
  Require libgda-3.0 instead of 2.0
  
  * libgda/libgdamm.h:
  Added some files but still needs complete fixing
  
  * libgda/src/parameter.hg
  * libgda/src/renderer.hg:
  Fixed build with latest libgda, added TODO in GdaRenderer
  
  * libgda/src/datamodelquery.hg:
  Added correct create() method
  
  * tools/m4/convert_libgdamm.m4:
  Added conversion and fixed type

2007-01-12  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datamodel.hg:
	* libgda/src/datasourceinfo.ccg:
	* libgda/src/datasourceinfo.hg:
	* libgda/src/parameter.hg:
	* libgda/src/query.ccg:
	* libgda/src/query.hg:
	* libgda/src/renderer.ccg:
	* libgda/src/renderer.hg: Removed some unnecessary NO_GTYPE options from the 
	_WRAP_ENUM() statements (this has been fixed in libgda), and removed some unnecessary 
	includes of C headers from our C++ headers.

2007-01-11  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/serverprovider.hg: Remove create_blob() and fetch_blob_by_id(), 
	because they have been removed from libgda.

2007-01-11  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/query.hg: Inherit from the interfaces that we implement.
	execute(): Remove the const overload. It does not seem appropriate.
	get_parent_query(): Use refreturn to take a reference.
	* libgda/src/renderer.hg: Make is_valid() const.
	* libgda/src/queryobject.hg:
	* libgda/src/xmlstorage.hg: Added some mostly unimportant TODO comments.

2007-01-10  Johannes Schmid <johannes.schmid@openismus.com>

	* libgda/src/blobop.hg:
	* libgda/src/blobop.ccg:
	* libgda/src/blob.hg:
	* libgda/src/blob.ccg:
	Wrapped GdaBlob and GdaBlobOp
	
	* libgda/src/serverprovider.hg:
	Used Gda::Blob instead of GdaBlob

2007-01-08  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/referer.hg:
	* libgda/src/referer.ccg:
	* libgda/src/renderer.hg:
	* libgda/src/renderer.ccg:
	* libgda/src/xmlstorage.hg:
	* libgda/src/xmlstorage.ccg:
	* libgda/src/queryobject.hg:
	* libgda/src/queryobject.ccg:
	* libgda/src/query.hg:
	* libgda/src/query.ccg:
	* libgda/src/Makefile_list_of_hg.am_fragment: Wrapped GdaReferer,
	GdaRenderer, GdaXmlStorage and parts of GdaQuery.

	* tools/m4/convert_libgdamm.m4: Added new conversions.

2007-01-09  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.hg: add_event(string): Renamed to add_event_string(), 
	because it is not really the same as add_event() and because it now returns 
	something.

2007-01-09  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_methods.defs: Regenerated.
	* libgda/src/connection.hg: Remove create_blob() and fetch_blob_by_id(), 
	because the C functions have been removed.
	Ignore gda_connection_internal_*() functions.

2006-12-28  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datahandler.hg: get_sql_from_value(),  get_str_from_value(): 
	Made these const.
	* libgda/src/handlerbin.hg:
	* libgda/src/handlertime.hg: Added TODO next to the comments from Armin, 
	so we remember to think about them later.

2006-12-24  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/datahandler.hg:
	* libgda/src/datahandler.ccg:
	* libgda/src/handlerstring.hg:
	* libgda/src/handlerstring.ccg:
	* libgda/src/handlerboolean.hg:
	* libgda/src/handlerboolean.ccg:
	* libgda/src/handlertime.hg:
	* libgda/src/handlertime.ccg:
	* libgda/src/handlernumerical.hg:
	* libgda/src/handlernumerical.ccg:
	* libgda/src/handlerbin.hg:
	* libgda/src/handlerbin.ccg:
	* libgda/src/handlertype.hg:
	* libgda/src/handlertype.ccg:
	* libgda/src/Makefile_list_of_hg.am_fragment: Wrapped data handlers.

2006-12-22  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/datamodelrow.hg:
	* libgda/src/datamodelarray.hg:
	* libgda/src/datamodelrow.ccg:
	* libgda/src/datamodelarray.ccg:
	* libgda/src/Makefile_list_of_hg.am_fragment: Wrapped GdaDataModelRow
	and GdaDataModelArray.

	* libgda/src/client.hg: Added db_name parameter to
	prepare_create_database() and prepare_drop_database().

	* tools/extra_defs_gen/generate_defs_gda.cc: Added defs for
	GDA_DATA_MODEL_ROW to output.

	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_signals.defs: Regenerated.

2006-12-15  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/datamodelquery.ccg:
	* libgda/src/datamodelquery.hg: Added DataModelQuery class, which 
	implements the DataModel interface. There are a few more of these 
	DataModel* classes to wrap.
	* tools/m4/convert_libgdamm.m4: Added new conversions.
	* libgda/src/datamodel.hg: Ignore gda_data_model_move_iter_at_row, 
	gda_data_model_move_iter_next, and gda_data_model_move_iter_prev, 
	which have become private API in libgda.
	* libgda/src/libgda_enums.defs:
	* libgda/src/libgda_methods.defs: Regenerated.

2006-11-29  Armin Burgmeier  <armin@openismus.com>

	* configure.in: Require libgda-3.0 >= 2.99.2.
	* libgda/src/Makefile_list_of_hg.am_fragment: Moved transaction.hg to
	transactionstatus.hg.

	* libgda/src/client.hg:
	* libgda/src/column.hg:
	* libgda/src/command.hg:
	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	* libgda/src/dict.ccg:
	* libgda/src/dict.hg:
	* libgda/src/parameterlist.hg: 
	* libgda/src/serverprovider.hg: Build fixes to build against libgda
	HEAD. Some functions had to be removed because the new API seems not
	to offer them anymore. Some other, new functions are still unwrapped.

	* libgda/src/transactionstatus.hg:
	* libgda/src/transactionstatus.ccg: New files, replacing
	transaction.hg respectively transaction.ccg.

	* tools/m4/convert_libgdamm.m4: Replaced Transaction by
	TransactionStatus.

	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_signals.defs: Regenerated.

2006-11-08  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg: Added get_column_index() and 
	get_value_at(column_name).
	* libgda/src/parameter.hg: Renamed get_gda_type() to get_g_type().
	* libgda/src/serverprovider.hg: Added get_info().

2006-11-08  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/serverprovider.hg: Added ServerProviderInfo typedef.
	* libgda/src/connection.ccg:
	* libgda/src/connection.hg: Added get_infos().

2006-11-08  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/entity.ccg:
	* libgda/src/entity.hg:
	* libgda/src/entityfield.ccg:
	* libgda/src/entityfield.hg: Added the Entity and 
	EntityField interfaces.
	* libgda/src/parameter.hg: Added declare_param_user() and 
	get_param_users().
	* tools/m4/convert_libgdamm.m4: Added necessary conversions.

2006-11-07  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h: Rename get/set_bool() to get/set_boolean().
	Added get_g_type() and set(GType), for Values that contain a GType, such 
	as the field types.
	* libgda/src/column.ccg:
	* libgda/src/column.hg: Added a hand-coded equal() function because it 
	has been removed from libgda.
	Rename get/set_gda_type() to get/set_g_type().
	get_references(): Make it const.
	* libgda/src/libgda_methods.defs: Regenerate with h2defs.py.

2006-11-06  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h: Derive a new 
	Gnome::Gda::Value class, from Glib::ValueBase, 
	as a variant type (which Glib::ValueBase is not, 
	because it must be used via specialized derived template 
	instantiations), including the gda-specific types. This 
	API is simpler and less ugly than lots of value_*(Glib::Value)
	functions.
	* tools/m4/convert_libgdamm.m4:
	* libgda/src/column.ccg:
	* libgda/src/column.hg:
	* libgda/src/connection.hg:
	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg:
	* libgda/src/parameter.ccg:
	* libgda/src/parameter.hg:
	* libgda/src/parameterlist.ccg:
	* libgda/src/parameterlist.hg:
	* libgda/src/row.ccg:
	* libgda/src/row.hg:
	* libgda/src/serverprovider.hg:
	* examples/introspection/main.cc:
	* examples/simple/main.cc: Adapt to new API.

2006-10-21  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h:
	* libgda/src/client.hg:
	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	* libgda/src/datamodelindex.ccg:
	* libgda/src/datasourceinfo.ccg:
	* libgda/src/dict.ccg:
	* libgda/src/dictaggregate.ccg:
	* libgda/src/dictdatabase.ccg:
	* libgda/src/dicttype.ccg:
	* libgda/src/libgda_enums.defs:
	* libgda/src/object.ccg:
	* libgda/src/parameter.ccg:
	* libgda/src/parameter.hg:
	* libgda/src/parameterlist.ccg:
	* libgda/src/parameterlist.hg:
	* libgda/src/providerinfo.ccg: Wrap the GError types.
	* examples/introspection/main.cc: Catch exception.

2006-10-21  Murray Cumming  <murrayc@murrayc.com>

	* examples/Makefile.am_fragment: Link to the correct library, now that 
	we have changed the name.
	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h: Add value_get/set utility methods for 
	the non-gda generic glib types. These are not in glibmm because 
	Glib::Value is not usually used as a variant, without using specific 
	Glib::Value<> specializations.
	* examples/introspection/main.cc:
	* examples/simple/main.cc: Adapt for the new API.

2006-10-21  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/column.ccg:
	* libgda/src/column.hg:
	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg:
	* libgda/src/parameter.ccg:
	* libgda/src/parameter.hg:
	* libgda/src/parameterlist.ccg:
	* libgda/src/parameterlist.hg:
	* libgda/src/row.ccg:
	* libgda/src/row.hg: Use ValueBase as a return type, 
	instead of as an output parameter. This loses the ability to do 
	compile-time type-safe getting, but that is not very useful or 
	safe with databases anyway.
	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h: Add get and set utility functions, 
	matching the libgda ones. People getting a ValueBase will have 
	to check the type and use a specific get method, deciding at 
	runtime. That is not how ValueBase is usually used in gtkmm, 
	but it is demanded by libgda, because the database structure 
	is out of the control of the compiler.
	* examples/introspection/main.cc: Adapted for new API.

2006-10-21  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h: Add constants for libgda-specific 
	GValue types.

2006-10-21  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/value.cc: equal(): Add extra checks, to 
	match the extra checks that we had in Gnome::Gda::Value in 
	libgdamm 2.0.

2006-10-21  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h: Add some utility functions for 
	working with Glib::Values with libgdamm:
	value_compare(), value_compare_ex(), value_equal(), 
	value_is_null(), value_is_number().  
	* libgda/src/column.hg: Rename the gda_type_changed signal to 
	g_type_changed() as in the C API.

2006-10-21  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg: Added prototype for GdaDataModelIter, 
	which we should wrap properly.
	Added DataModelHint and DataModelIOFormat enums and used them 
	instead of the C enums.
	* tools/m4/convert_libgdamm.m4: Added enum conversions.

2006-10-21  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* libgda/Makefile.am:
	* libgda/libgdamm-2.0.pc.in: Removed
	* libgda/libgdamm-3.0.pc.in: Added
	* libgda/libgdamm/Makefile.am:
	* libgda/libgdamm/private/Makefile.am:
	* tools/m4/Makefile.am: Change the pkg-config name, the 
	.so library name, and the include directory from 2.0 to 
	3.0, to allow parallel installation with libgdamm-2.0.
	Note that libgdamm-2.0 wrapped libgda-1.2.

2006-10-21  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_docs.xml: Regenerated.
	* libgda/src/libgda_enums.defs: Regenerated with enums.pl
	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py
	* libgda/src/client.ccg:
	* libgda/src/client.hg: Remove ClientSpecsType enum, and
	get_provider_specs() method.
	Added prepare_create_database() and prepare_drop_database().
	Rename create_database() and drop_database() to 
	perform_create_database() and perform_drop_database(), taking 
	ServerOperation instead of ParameterList.
	* libgda/src/connection.ccg:
	* libgda/src/connection.hg: Rename execute_command() methods 
	to execute_select_command(). There are 2 other execute* functions 
	to wrap, but I need to find out how the GList result should be used.
	Remove create_table(), drop_table(), create_index(), drop_index().
	Renamed supports() to supports_feature().
	* libgda/src/datamodel.hg: export_to_file(): Added rows parameters.
	* libgda/src/object.hg: Renamed changed to signal_emit_changed().
	Fixed typo in block_changed() method name.
	* libgda/src/serverprovider.hg: Removed get_specs(), perform_action_params(),
	create_database_cnc(), drop_database_cnc(), create_table(), drop_table(), 
	create_index(), drop_index().
	supports_operation(): Added ParameterList parameter.
	Renamed supports() to supports_feature().
	* examples/simple/main.cc: Update for latest API, changing use of 
	execute_command() to execute_select_command().

2006-07-04  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/serveroperation.ccg:
	* libgda/src/serveroperation.hg:
	* tools/m4/convert_libgdamm.m4: Added ServerOperation.
	* libgda/src/serverprovider.hg: Added supports_operation(), 
	create_operation(), render_operation(), perform_operation(), 
	fetch_blob_by_id().
	* libgda/src/libgda_enums.defs: Regenerated with enums.pl

2006-06-29  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/column.hg: Remove duplicate get/set_gda_type() functions.
	* libgda/src/dictdatabase.ccg: Add this to cvs, to fix the build.

2006-06-29  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/Makefile.am:
	* libgda/src/libgda.defs:
	* libgda/src/libgda_others.defs: Add new defs file for signals 
	of interfaces, which must be hand-written.
	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_signals.defs: Regenerated.
	* libgda/src/libgda_vfuncs.defs: Remove these because they are 
	not worth the code and memory size. 
	* libgda/src/column.hg: Changed get_gdatype() to get_gda_type().
	Wrapped signals.
	* libgda/src/datamodel.hg: Wrapped the correct signals.
	* tools/extra_defs_gen/generate_defs_gda.cc: Commented-out interfaces, 
	which can not be instantiated.

2006-06-11  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/column.hg: Added set/get_gda_type()
	* libgda/src/connectionevent.ccg:
	* libgda/src/connectionevent.hg: Added set/get_event_type().
	Changed get/set_number() to get/set_code(). Added get/set_gda_code().
	* libgda/src/libgda_methods.defs:  Regenerated with h2defs.py.
	* libgda/src/parameter.ccg:
	* libgda/src/parameter.hg: Added  get_gda_type(), has_restrict_values().
	* tools/m4/convert_libgdamm.m4: Added conversions for new enums.

2006-05-14  Murray Cummingg  <murrayc@murrayc.com>

	* libgda/src/client.hg: Added  declare_connection()
	* libgda/src/connection.hg: Added  set_client()
	* libgda/src/parameterlist.ccg:
	* libgda/src/parameterlist.hg: Added find(), add_param(), add_param_from_string),
	add_param_from_value(), merge(), is_coherent(), is_valid(), find_param(), 
	find_param_for_user(), set_param_default_value(), set_param_default_alias(), 
	get_param_default_value(), clear(), get_spec().
	* tools/m4/convert_libgdamm.m4: Use conversion macros and added some conversions.

2006-05-09  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py
	* libgda/src/client.hg:
	* libgda/src/column.ccg:
	* libgda/src/column.hg:
	* libgda/src/connection.hg:
	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg:
	* libgda/src/parameter.ccg:
	* libgda/src/parameter.hg:
	* libgda/src/parameterlist.hg:
	* libgda/src/row.ccg:
	* libgda/src/row.hg:
	* libgda/src/serverprovider.hg: Use Glib::ValueBase instead of Gda::Value, 
	and use it via an output parameter so that the caller can use a compile-time 
	type-safe derived Glib::Value<> type. This requires the latest glibmm from cvs. 
	* tools/m4/convert_libgdamm.m4:
	* libgda/libgdamm/Makefile.am:
	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/value.ccg:
	* libgda/src/value.hg: Removed, replace with:
	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h: which has some non-class functions.
	We need to add more stuff here that corresponds with the remaining 
	functions in gda-value.h
	* examples/introspection/main.cc:
	* examples/simple/main.cc: Updated.

2006-05-08  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg: Removed reset() because it was removed 
	from libgda.
	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg: Added get_attributes_at, create_iter() move_iter_at_row(), 
	move_iter_nex(), move_iter_prev, send_hint(), import_from_string(), import_from_file(), 
	row_changed(), row_inserted(), row_updated(), row_removed(), move_iter_at_row_default(), 
	move_iter_next_default(), move_iter_prev_default().
	* tools/m4/convert_libgdamm.m4: Added const conversion.

2006-05-08  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.hg: Added open(), set_dsn(), set_username(), 
	set_password(), get_provider_obj(), fetch_blob_by_id().
	* tools/m4/convert_libgdamm.m4: Added ServerProvider conversion.

2006-05-08  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datamodelbase.ccg:
	* libgda/src/datamodelbase.hg: Removed, because it was removed 
	from the libgda API.
	* libgda/src/dictaggregate.ccg:
	* libgda/src/dictaggregate.hg:
	* libgda/src/dictdatabase.hg:
	* libgda/src/dicttype.ccg:
	* libgda/src/dicttype.hg:
	* libgda/src/object.ccg:
	* libgda/src/object.hg: New classes
	* libgda/src/Makefile_list_of_hg.am_fragment: Mention new files.
	* libgda/src/connection.ccg:
	* libgda/src/connection.hg: execute_single_command() renamed to 
	execute_command().
	* libgda/src/dict.ccg:
	* libgda/src/dict.hg:
	* libgda/src/client.hg:
	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg:
	* libgda/src/parameter.ccg:
	* libgda/src/parameter.hg:
	* libgda/src/parameterlist.ccg:
	* libgda/src/parameterlist.hg:
	* libgda/src/providerinfo.ccg:
	* libgda/src/providerinfo.hg:
	* libgda/src/serverprovider.ccg:
	* libgda/src/serverprovider.hg: Various API changes. For instance, 
	most classes now derived from Glib::Object, so must be use with 
	Glib::RefPtr.
	* libgda/src/libgda_methods.defs: Updated with h2defs.py
	* libgda/src/libgda_signals.defs: Updated with extra_defs_gen.
	* tools/extra_defs_gen/generate_defs_gda.cc: Output .defs for the 
	new types.
	* tools/m4/convert_libgdamm.m4: New conversions.
	* examples/introspection/main.cc:
	* examples/list_data_sources/main.cc:
	* examples/simple/main.cc: Update for new API.

2005-10-23  Murray Cumming <murrayc@murrayc.com>

	* libgda/src/column.hg: Add equal() and 
	get/set_title().
	* libgda/src/libgda_methods.defs: Regehnerated 
	with h2defs.py.
	* libgda/src/parameterlist.hg: Use _IGNORE() 
	to avoid warnings.
	* tools/m4/convert_libgdamm.m4: Added conversion
	for Column:equal().

2005-10-20  Murray Cumming <murrayc@murrayc.com>

	* libgda/libgdamm/config.cc:
	* libgda/libgdamm/config.h: Hide the C header, 
	putting an implementation that needs it in 
	the .cc file.
	* libgda/src/connection.ccg:
	* libgda/src/connection.hg: create_index(): 
	Use a DataModelIndex& instead of a 
	GdaModelIndex*. Hide the C header.

2005-10-19  Murray Cumming <murrayc@murrayc.com>

	* configure.in: Check for libgda-2.0 1.9.101 
	instead of 1.99. Strangely, it has decreased.
	* libgda/src/datamodel.hg: Use renamed GdaDataModel 
	interface struct.

2005-09-28  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Increase need libgda version a bit.
	* libgda/src/column.hg:
	* libgda/src/datamodel.hg:
	* libgda/src/libgda_methods.defs:
	* libgda/src/row.ccg:
	* libgda/src/row.hg:
	* tools/m4/convert_libgdamm.m4: Update for latest 
	API changes.

2005-09-22  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/column.hg: This is now a GObject, 
	so wrap it like one. It is therefore now used 
	via RefPtr.
	* libgda/src/connection.hg:
	create_blob(): Changed signature.
	* libgda/src/datamodel.hg: Removed several 
	methods and vfuncs that have been removed from 
	libgda's API.
	* libgda/src/libgda_methods.defs: Regenerate
	* libgda/src/libgda_vfuncs.defs: Update.
	* libgda/src/serverprovider.hg:
	create_blob(): Changed signature.
	* tools/extra_defs_gen/generate_defs_gda.cc: 
	Remove XQL stuff, removed from libgda.
	* tools/m4/convert_libgdamm.m4: Use Column as 
	a RefPtr.
	* examples/simple/main.cc: Update for changed API.

2005-09-21  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/value.ccg:
	* libgda/src/value.hg: set_binary(), get_binary():
	Hide the GdaBinary type completely, using guchar* and 
	size instead. It is silly.

2005-09-21  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/client.hg: create_database(), 
	drop_database(): Change parameter to 
	const ParameterList& instead of GdaParameterList*. 
	* libgda/src/parameter.hg: Change a gdouble to double.
	* libgda/src/parameterlist.hg: Added templated add()
	method, so you do not need to explicitly create a 
	Parameter object.
	* libgda/src/value.hg: set(binary): Change from 
	GdaBinary* to const GdaBinary&.
	* tools/m4/convert_libgdamm.m4: Changed necessary 
	conversions.

2005-09-16  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_methods.defs: Updated with h2defs.py.
	* libgda/src/value.ccg:
	* libgda/src/value.hg: Updated set_binary() and a 
	constuctor for the changed libgda API.

2005-09-12  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm-2.0.pc.in: Update to show that it now 
	uses the libgda-2.0 API instead of the older libgda API.
	* libgda/src/value.hg: Added reset_with_type(). 
	get_binary() now returns a GdaBinary*.
	Renamed get/set_vtype() to get/set_gdatype(). Added 
	compare() and compare_ex().
	* tools/m4/convert_libgdamm.m4: Added needed conversion.

2005-09-10  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	Added columnindex.hg, datamodelindex.hg
	* libgda/src/client.hg: Added ClientSpecsType.
	Changed get_connection_list() to get_connections().
	Added notify_connection_closed_event(),
	get_provider_specs()
	* libgda/src/column.hg: Added get_dbms_type(), 
	commit_update(), 
	* libgda/src/columnindex.ccg:
	* libgda/src/columnindex.hg: New class.
	* libgda/src/connection.hg: Added clear_events_list(),
	value_to_sql_string(), and error signal.
	* libgda/src/datamodel.hg: Added append_values(), 
	to_text_separated(), dump(), dump_as_string(), and 
	various vfuncs and signals.
	* libgda/src/datamodelindex.ccg:
	* libgda/src/datamodelindex.hg: New class.
	* libgda/src/libgda_enums.defs: Regenerated with enums.pl.
	* libgda/src/libgda_signals.defs: Regenerated with extra_defs.
	* libgda/src/libgda_vfuncs.defs: Edited by hand.
	* libgda/src/serverprovider.ccg:
	* libgda/src/serverprovider.hg: Added reset_connection(), 
	create_database(), drop_database(), get_specs(), 
	perform_action_params(), create_database_cnc(), drop_database_cnc(), 
	create_table(), drop_table(), create_index(), drop_index(), 
	value_to_sql_string(), get_last_insert_id().

2005-08-23  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/client.hg: Added get_dsn_specs(), create_database(), 
	drop_database().
	* libgda/src/connection.hg: Added reset(). Renamed add_error*() to 
	add_event*(). Added create_table(), drop_table(), create_index(), 
	drop_index().
	* tools/m4/convert_libgdamm.m4: Use ConnectionEvent instead of Error.

2005-08-23  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm.h:
	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/column.ccg:
	* libgda/src/column.hg: Rename from 
	datamodelcolumnattributes.
	* libgda/src/connection.hg:
	* libgda/src/connectionevent.ccg:
	* libgda/src/connectionevent.hg: Rename from error.*
	* libgda/src/datamodel.hg:
	* libgda/src/datamodelcolumnattributes.ccg:
	* libgda/src/datamodelcolumnattributes.hg: Removed.
	* libgda/src/error.ccg:
	* libgda/src/error.hg: Removed.

2005-08-23  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Use libgda-2.0
	* examples/simple/main.cc: Update for new API.
	* libgda/libgdamm/config.cc:
	* libgda/libgdamm/config.h: Use renamed _free and _copy functions.
	* libgda/src/client.hg:
	* libgda/src/connection.ccg:
	* libgda/src/connection.hg: execute_*() methods now throw.
	* libgda/src/datamodel.hg:
	* libgda/src/datamodelcolumnattributes.ccg:
	* libgda/src/datamodelcolumnattributes.hg: Renamed to Column.
	* libgda/src/datasourceinfo.hg: Use renamed _free and _copy functions.
	* libgda/src/error.hg: Renamed to ConnectionEvent.
	* libgda/src/libgda_methods.defs: Regenerate with h2defs.py
	* libgda/src/row.hg: Added get/set_is_default().
	* libgda/src/value.ccg:
	* libgda/src/value.hg: get_binary() now returns a GdaBinary instead of 
	gpointer.
	* tools/extra_defs_gen/generate_defs_gda.cc:
	* tools/m4/convert_libgdamm.m4: Updated for renamed types.

2005-02-03  Murray Cumming  <murrayc@murrayc.com>
 
 	* libgda/src/value.[hg|ccg]: Replace the Value(gint64) and 
 	Value(guint64) constructors with static create_as_* methods, to 
 	avoid conflicts on 64-bit systems. Bug #162253 from Daniel Holbach,
	who wrote part of the patch.

2005-01-11  Murray Cumming  <murrayc@murrayc.com>

	* Changes to fix the build against the new libgda API.
	* libgda/src/libgda_methods.defs: Rebuilt with h2defs.py
	* libgda/src/libgda_signals.defs: Rebuilt with extra_defs.
	* tools/m4/convert_libgda.m4: Renamed types.
	* libgda/src/: Renamed fieldattributes.[hg|ccg] to 
	datamodelcolumnattributes.[hg|ccg]
	* libgda/src/datamodel.hg: This is now an interface.
	* libgda/src/: Aded datamodelbase.[hg|ccg].
	* libgda/src/client.[hg|ccg], datamodel.[hg|ccg]: Renamed types.
        * examples/list_data_sources/main.cc: Added try/catch block around 
        the example.

This is the HEAD branch. The libgda-1-2 branch builds against libgda 1.2.

2005-01-06  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/value.ccg: Remove the implementation of the time_t 
	constructor that I removed a couple of days ago, to fix the build.

2005-01-06  Daniel Holbach <dh@mailempfang.de>

	* docs/reference/Doxyfile.in: Replace old LIBGNOMEMM_ stuff with 
	LIBGLADEMM_.

2005-01-04  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/value.hg: Remove the time_t constructor, because it 
	is ambiguous on 64-bit systems. Bug #162253 from Daniel Holbach.

2004-11-30  Murray Cumming  <murrayc@murrayc.com>

	* examples/introspection/main.cc: Reverted some useless changes that I 
	made for my own debugging.

1.3.5:

2004-11-28  Murray Cumming  <murrayc@murrayc.com>

	* Removed lots of extra ;s to fix problems with gcc 3.4.

1.3.4:
	
2004-06-06  Murray Cumming  <murrayc@murrayc_debian>

	* libgda/src/libgda_methods.defs: Updated with h2defs.py.
	* libgda/src/datamodel.hg: Changed the update_column() and 
	remove_column() arguments to match changes in libgda.

2004-06-06  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/value.[hg|ccg]: Added typedefs for Date, Time, Timestamp,
	and Geometric point, and used them by value instead of by pointer.

2004-06-01  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/value.[hg|ccg]: Added operator==() and operator!=().

1.3.3:

2004-05-04  Murray Cumming  <murrayc@murrayc@murrayc.com>

	* libgda/src/transaction.[hg|cc]: Hand-code the constructor because
	it does not just use properties.

2004-05-04  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.hg: Added get_last_insert_id(), as wrapper for
	the new gda_connection_get_last_insert_id() function.

2004-04-30  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.[hg|ccg]: Override the destructor so that it
	closes the connection.

2004-04-23  Murray Cumming  <murrayc@murayc.com>

	* libgda/src/fieldattributes.hg: Tell it to use the _new() function in
	the default constructor so that we don't get invalid null instances.

2004-04-23  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datamodel.hg: get_value_at(): Take a copy of the value
	so it is not freed twice.

2004-04-22  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/value.ccg: Implemented the constructors.

2004-04-21  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/value.hg: Added type_to_string() and type_from_string()
	static methods.
	

2004-04-20  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, tools/extra_defs/Makefile.am: Update to use glibmm
	2.4 gmmproc and extra_defs lib.
	* libgda/src/connection.hg: Add an execute_single_command() override 
	that takes a string.
	* libgda/src/: Added FieldAttribute.
	* libgda/src/datamodel.hg: Added append_column(), update_column(), 
	and remove_column().
	* libgda/src/transaction.hg: Added set/get_isolation_level();

2004-04-08  Murray Cumming  <murrayc@murrayc.com>

	Working bits of a patch from Alberto Paro.
	* libgda/libgdamm-2.0.p.in: Depend on glibmm 2.4 instead of gtkmm 2.0.
	* tools/extra_defs/Makefile.am: Link to the glibmm-2.3 library instead
	of the gtkmm 2.0 one.

1.3.2:

2004-04-05  Murray Cumming  <murrayc@murrayc.com>

	* examples/: Added README.txt. Moved simple example to
	introspection. Added more appropriate simple example.
	* libgda/src/command.hg: Add default parameter values.
	* libgda/src/connection.hg: Added overloads of execute methods that
	take no ParameterList.
	* libgda/src/parameterlist.hg: Hand-code add_parameter() to give the 
	C function a copy, because it takes ownership.

2004-04-04  Murray Cumming  <murrayc@murrayc.com>

	* Use Value and ParameterList in API.

2004-04-04  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/: Added wrappers for Value, Parameter, ParameterList.

1.3.1:

2004-03-30  Murray Cumming  <murrayc@murrayc.com>

	* Wrapped some GList* return types as ListHandles.

2004-03-30  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/row.[hg|ccg]: Added these files, wrapping GdaRow.
	* libgda/src/datamodel.[hg.ccg]: Added foreach().

2004-03-30  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/serverprovider.hg, datamodel.hg: Wrapped new methods.

2004-03-30  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs.gda.cc: Include glibmm_extra_defs
	rather than the old gtkmm one, to really fix the build.

2004-03-30  Murray Cumming  <murrayc@murrayc.com>

	* examples/simple now also builds and works, though it is not yet 
	a real example.

2004-03-30  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm/config.cc: get_gda_params(): Use OWNERSHIP_NONE so 
	that we do not delete parts of the struct field that we do not own.
	examples/list_data_sources now runs without crashing.

2004-03-29  Murray Cumming  <murrayc@murrayc.com>

	* Now uses glibmm 2.4 instead of gtkmm 2.2.

2004-02-15  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datamodel.hg: Renamed the C++ methods to match the
	C function names, correcting the previous change. The API is not 
	stable so we are free to change them to match changes in libgda.

2003-12-17  Billy O'Connor <billyoc@gnuyork.org>

	* libgda/src/libgda_methods.defs:
	* libgda/src/datamodel.hg: Changes to is_editable(), is_editing(),
	begin_edit(), cancel_edit() and end_edit() wrappers to reflect 
	libgda function renames.

2003-11-05  Alexander Nedotsukov <bland@mail.ru>

	* libgda/libgda-2.0.pc.in: Fixed pkgconfig package dependency and
	library list. 

2003-10-05  Murray Cumming  <murrayc@usa.net>

	* Added wrappers for Client, Config, DataSourceInfo, ProviderInfo,
	and used the C++ types in the rest of the API.
	* libgda/libgdamm/init.[h|cc]: Added Gnome::Gda::init() function.
	* Added examples/list_data_sources.

1.3.0:
	
2003-10-01  Murray Cumming  <murrayc@usa.net>

	* libgda/libgdamm/private/Makefile.am: Use _HEADERS instead of
	_DATA (I looked at gnome-vfsmm) to fix the dist. distcheck now
	works.

2002-12-10  Bradley Bell  <btb@debian.org>
	
	* scripts/Makefile.am: distribute macros.m4

2002-11-02  Murray Cumming  <murrayc@usa.net>

	* libgdammconfig.h and init.h: Replaced "libgnomemm" with
	"libgdamm".

2002-07-20  Murray Cumming  <murrayc@usa.net>

	* Connection, DataModel: wrapped a few more functions.

2002-07-17  Murray Cumming  <murrayc@usa.net>

	* DataModel: We don't need to specify the _vfunc suffixes now -
	gtkmmproc adds them for us.

2002-07-06  Murray Cumming  <murrayc@usa.net>

	* Added Transaction wrapper, used in Connection methods.

2002-05-03  Murray Cumming  <murrayc@usa.net>

	* Revised build files so that they are like the other gnomemm
	projects - this means that generated source is now distributed.
	* Updated libgda_methods.defs and libgda_enums.defs for the libgda
	HEAD branch refactoring. It now builds against libgda HEAD.

2002-04-19  Muray Cumming  <murrayc@usa.net>

	* Removed traces of libgnomemm, from which this project was copied
	when it was first created.

2002-04-17  Murray Cumming  <murrayc@usa.net>

	* Build: Make it depend on glibmm rather than gtkmm, although they
	are both in the same package at the moment.

2002-04-15  Murray Cumming  <murrayc@usa.net>

	* Added basic wrappers for GdaError and GdaDataModel, and used
	those C++ types in the Gda::Connection interface, so that
	people get the general idea.
	* Added libgda_vuncs.defs (hand coded) and libgda_enums.defs
	(generated with gtkmm/tools/enums.pl)
