;; From WebKitDownload

(define-signal error
  (of-object "WebKitDownload")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("gint" "p0")
    '("gint" "p1")
    '("const-gchar*" "p2")
  )
)

(define-property network-request
  (of-object "WebKitDownload")
  (prop-type "GParamObject")
  (docs "The network request for the URI that should be downloaded")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property destination-uri
  (of-object "WebKitDownload")
  (prop-type "GParamString")
  (docs "The destination URI where to save the file")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property suggested-filename
  (of-object "WebKitDownload")
  (prop-type "GParamString")
  (docs "The filename suggested as default when saving")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property progress
  (of-object "WebKitDownload")
  (prop-type "GParamDouble")
  (docs "Determines the current progress of the download")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property status
  (of-object "WebKitDownload")
  (prop-type "GParamEnum")
  (docs "Determines the current status of the download")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property current-size
  (of-object "WebKitDownload")
  (prop-type "GParamUInt64")
  (docs "The length of the data already downloaded")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property total-size
  (of-object "WebKitDownload")
  (prop-type "GParamUInt64")
  (docs "The total size of the file")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From WebKitNetworkRequest

(define-property uri
  (of-object "WebKitNetworkRequest")
  (prop-type "GParamString")
  (docs "The URI to which the request will be made.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property message
  (of-object "WebKitNetworkRequest")
  (prop-type "GParamObject")
  (docs "The SoupMessage that backs the request.")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From WebKitSoupAuthDialog

(define-signal current-toplevel
  (of-object "WebKitSoupAuthDialog")
  (return-type "GtkWidget*")
  (when "last")
  (parameters
    '("SoupMessage*" "p0")
  )
)

;; From WebKitWebBackForwardList

;; From WebKitWebFrame

(define-signal load-committed
  (of-object "WebKitWebFrame")
  (return-type "void")
  (when "last")
)

(define-signal title-changed
  (of-object "WebKitWebFrame")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
  )
)

(define-signal hovering-over-link
  (of-object "WebKitWebFrame")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("const-gchar*" "p1")
  )
)

(define-signal cleared
  (of-object "WebKitWebFrame")
  (return-type "void")
  (when "last")
)

(define-signal load-done
  (of-object "WebKitWebFrame")
  (return-type "void")
  (when "last")
  (parameters
    '("gboolean" "p0")
  )
)

(define-property name
  (of-object "WebKitWebFrame")
  (prop-type "GParamString")
  (docs "The name of the frame")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property title
  (of-object "WebKitWebFrame")
  (prop-type "GParamString")
  (docs "The document title of the frame")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property uri
  (of-object "WebKitWebFrame")
  (prop-type "GParamString")
  (docs "The current URI of the contents displayed by the frame")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property load-status
  (of-object "WebKitWebFrame")
  (prop-type "GParamEnum")
  (docs "Determines the current status of the load")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From WebKitWebHistoryItem

(define-property title
  (of-object "WebKitWebHistoryItem")
  (prop-type "GParamString")
  (docs "The title of the history item")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property alternate-title
  (of-object "WebKitWebHistoryItem")
  (prop-type "GParamString")
  (docs "The alternate title of the history item")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property uri
  (of-object "WebKitWebHistoryItem")
  (prop-type "GParamString")
  (docs "The URI of the history item")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property original-uri
  (of-object "WebKitWebHistoryItem")
  (prop-type "GParamString")
  (docs "The original URI of the history item")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property last-visited-time
  (of-object "WebKitWebHistoryItem")
  (prop-type "GParamDouble")
  (docs "The time at which the history item was last visited")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From WebKitWebInspector

(define-signal inspect-web-view
  (of-object "WebKitWebInspector")
  (return-type "WebKitWebView*")
  (when "last")
  (parameters
    '("WebKitWebView*" "p0")
  )
)

(define-signal show-window
  (of-object "WebKitWebInspector")
  (return-type "gboolean")
  (when "last")
)

(define-signal attach-window
  (of-object "WebKitWebInspector")
  (return-type "gboolean")
  (when "last")
)

(define-signal detach-window
  (of-object "WebKitWebInspector")
  (return-type "gboolean")
  (when "last")
)

(define-signal close-window
  (of-object "WebKitWebInspector")
  (return-type "gboolean")
  (when "last")
)

(define-signal finished
  (of-object "WebKitWebInspector")
  (return-type "void")
  (when "last")
)

(define-property web-view
  (of-object "WebKitWebInspector")
  (prop-type "GParamObject")
  (docs "The Web View that renders the Web Inspector itself")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property inspected-uri
  (of-object "WebKitWebInspector")
  (prop-type "GParamString")
  (docs "The URI that is currently being inspected")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property javascript-profiling-enabled
  (of-object "WebKitWebInspector")
  (prop-type "GParamBoolean")
  (docs "Profile the executed JavaScript.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From WebKitWebNavigationAction

(define-property reason
  (of-object "WebKitWebNavigationAction")
  (prop-type "GParamEnum")
  (docs "The reason why this navigation is occurring")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property original-uri
  (of-object "WebKitWebNavigationAction")
  (prop-type "GParamString")
  (docs "The URI that was requested as the target for the navigation")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property button
  (of-object "WebKitWebNavigationAction")
  (prop-type "GParamInt")
  (docs "The button used to click")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property modifier-state
  (of-object "WebKitWebNavigationAction")
  (prop-type "GParamInt")
  (docs "A bitmask representing the state of the modifier keys")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From WebKitWebPolicyDecision

;; From WebKitWebSettings

(define-property default-encoding
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default encoding used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cursive-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default Cursive font family used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property default-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default font family used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fantasy-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default Fantasy font family used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property monospace-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default font family used to display monospace text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sans-serif-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default Sans Serif font family used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property serif-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default Serif font family used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property default-font-size
  (of-object "WebKitWebSettings")
  (prop-type "GParamInt")
  (docs "The default font size used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property default-monospace-font-size
  (of-object "WebKitWebSettings")
  (prop-type "GParamInt")
  (docs "The default font size used to display monospace text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property minimum-font-size
  (of-object "WebKitWebSettings")
  (prop-type "GParamInt")
  (docs "The minimum font size used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property minimum-logical-font-size
  (of-object "WebKitWebSettings")
  (prop-type "GParamInt")
  (docs "The minimum logical font size used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enforce-96-dpi
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Enforce a resolution of 96 DPI")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property auto-load-images
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Load images automatically.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property auto-shrink-images
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Automatically shrink standalone images to fit.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property print-backgrounds
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Whether background images should be printed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-scripts
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Enable embedded scripting languages.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-plugins
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Enable embedded plugin objects.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resizable-text-areas
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Whether text areas are resizable.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property user-stylesheet-uri
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The URI of a stylesheet that is applied to every page.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property zoom-step
  (of-object "WebKitWebSettings")
  (prop-type "GParamFloat")
  (docs "The value by which the zoom level is changed when zooming in or out.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-developer-extras
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Enables special extensions that help developers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-private-browsing
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Enables private browsing mode")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-spell-checking
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Enables spell checking while typing")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property spell-checking-languages
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "Comma separated list of languages to use for spell checking")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-caret-browsing
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Whether to enable accesibility enhanced keyboard navigation")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-html5-database
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Whether to enable HTML5 database support")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-html5-local-storage
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Whether to enable HTML5 Local Storage support")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-xss-auditor
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Whether to enable teh XSS auditor")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property user-agent
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The User-Agent string used by WebKitGtk")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property javascript-can-open-windows-automatically
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Whether JavaScript can open windows automatically")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From WebKitWebWindowFeatures

(define-property x
  (of-object "WebKitWebWindowFeatures")
  (prop-type "GParamInt")
  (docs "The starting x position of the window on the screen.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property y
  (of-object "WebKitWebWindowFeatures")
  (prop-type "GParamInt")
  (docs "The starting y position of the window on the screen.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width
  (of-object "WebKitWebWindowFeatures")
  (prop-type "GParamInt")
  (docs "The width of the window on the screen.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height
  (of-object "WebKitWebWindowFeatures")
  (prop-type "GParamInt")
  (docs "The height of the window on the screen.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property toolbar-visible
  (of-object "WebKitWebWindowFeatures")
  (prop-type "GParamBoolean")
  (docs "Controls whether the toolbar should be visible for the window.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property statusbar-visible
  (of-object "WebKitWebWindowFeatures")
  (prop-type "GParamBoolean")
  (docs "Controls whether the statusbar should be visible for the window.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scrollbar-visible
  (of-object "WebKitWebWindowFeatures")
  (prop-type "GParamBoolean")
  (docs "Controls whether the scrollbars should be visible for the window.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property menubar-visible
  (of-object "WebKitWebWindowFeatures")
  (prop-type "GParamBoolean")
  (docs "Controls whether the menubar should be visible for the window.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property locationbar-visible
  (of-object "WebKitWebWindowFeatures")
  (prop-type "GParamBoolean")
  (docs "Controls whether the locationbar should be visible for the window.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fullscreen
  (of-object "WebKitWebWindowFeatures")
  (prop-type "GParamBoolean")
  (docs "Controls whether window will be displayed fullscreen.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From WebKitWebView

(define-signal create-web-view
  (of-object "WebKitWebView")
  (return-type "WebKitWebView*")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
  )
)

(define-signal web-view-ready
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
)

(define-signal close-web-view
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
)

(define-signal navigation-requested
  (of-object "WebKitWebView")
  (return-type "WebKitNavigationResponse")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("WebKitNetworkRequest*" "p1")
  )
)

(define-signal new-window-policy-decision-requested
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("WebKitNetworkRequest*" "p1")
    '("WebKitWebNavigationAction*" "p2")
    '("WebKitWebPolicyDecision*" "p3")
  )
)

(define-signal navigation-policy-decision-requested
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("WebKitNetworkRequest*" "p1")
    '("WebKitWebNavigationAction*" "p2")
    '("WebKitWebPolicyDecision*" "p3")
  )
)

(define-signal mime-type-policy-decision-requested
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("WebKitNetworkRequest*" "p1")
    '("const-gchar*" "p2")
    '("WebKitWebPolicyDecision*" "p3")
  )
)

(define-signal window-object-cleared
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("JSGlobalContextRef" "p1")
    '("JSObjectRef" "p2")
  )
)

(define-signal download-requested
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GObject*" "p0")
  )
)

(define-signal load-started
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
  )
)

(define-signal load-committed
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
  )
)

(define-signal load-progress-changed
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "p0")
  )
)

(define-signal load-error
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("const-gchar*" "p1")
    '("gpointer" "p2")
  )
)

(define-signal load-finished
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
  )
)

(define-signal title-changed
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("const-gchar*" "p1")
  )
)

(define-signal hovering-over-link
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("const-gchar*" "p1")
  )
)

(define-signal populate-popup
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkMenu*" "p0")
  )
)

(define-signal print-requested
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
  )
)

(define-signal status-bar-text-changed
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
  )
)

(define-signal icon-loaded
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal selection-changed
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal console-message
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("guint" "p1")
    '("const-gchar*" "p2")
  )
)

(define-signal script-alert
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("const-gchar*" "p1")
  )
)

(define-signal script-confirm
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("const-gchar*" "p1")
    '("gboolean*" "p2")
  )
)

(define-signal script-prompt
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("const-gchar*" "p1")
    '("const-gchar*" "p2")
    '("gchar**" "p3")
  )
)

(define-signal select-all
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal cut-clipboard
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal copy-clipboard
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal paste-clipboard
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal move-cursor
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("GtkMovementStep" "p0")
    '("gint" "p1")
  )
)

(define-signal create-plugin-widget
  (of-object "WebKitWebView")
  (return-type "GtkWidget*")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("const-gchar*" "p1")
    '("GHashTable*" "p2")
  )
)

(define-signal set-scroll-adjustments
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkAdjustment*" "p0")
    '("GtkAdjustment*" "p1")
  )
)

(define-property user-data
  (of-object "WebKitWebView")
  (prop-type "GParamPointer")
  (docs "Anonymous User Data Pointer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "WebKitWebView")
  (prop-type "GParamString")
  (docs "The name of the widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "The parent widget of this widget. Must be a Container widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "WebKitWebView")
  (prop-type "GParamInt")
  (docs "Override for width request of the widget, or -1 if natural request should be used")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "WebKitWebView")
  (prop-type "GParamInt")
  (docs "Override for height request of the widget, or -1 if natural request should be used")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is visible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget responds to input")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the application will paint directly on the widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget can accept the input focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget has the input focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is the focus widget within the toplevel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget can be the default widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is the default widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "If TRUE, the widget will receive the default action when it is focused")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is part of a composite widget")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property style
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "The style of the widget, which contains information about how it will look (colors etc)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property events
  (of-object "WebKitWebView")
  (prop-type "GParamFlags")
  (docs "The event mask that decides what kind of GdkEvents this widget gets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extension-events
  (of-object "WebKitWebView")
  (prop-type "GParamEnum")
  (docs "The mask that decides what kind of extension events this widget gets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-show-all
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether gtk_widget_show_all() should not affect this widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether this widget has a tooltip")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-markup
  (of-object "WebKitWebView")
  (prop-type "GParamString")
  (docs "The contents of the tooltip for this widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "WebKitWebView")
  (prop-type "GParamString")
  (docs "The contents of the tooltip for this widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "The widget's window if it is realized")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property double-buffered
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether or not the widget is double buffered")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border-width
  (of-object "WebKitWebView")
  (prop-type "GParamUInt")
  (docs "The width of the empty border outside the containers children")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "WebKitWebView")
  (prop-type "GParamEnum")
  (docs "Specify how resize events are handled")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "Can be used to add a new child to the container")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property title
  (of-object "WebKitWebView")
  (prop-type "GParamString")
  (docs "Returns the @web_view's document title")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property uri
  (of-object "WebKitWebView")
  (prop-type "GParamString")
  (docs "Returns the current URI of the contents displayed by the @web_view")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property copy-target-list
  (of-object "WebKitWebView")
  (prop-type "GParamBoxed")
  (docs "The list of targets this web view supports for clipboard copying")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property paste-target-list
  (of-object "WebKitWebView")
  (prop-type "GParamBoxed")
  (docs "The list of targets this web view supports for clipboard pasting")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property editable
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether content can be modified by the user")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property settings
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "An associated WebKitWebSettings instance")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property web-inspector
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "The associated WebKitWebInspector instance")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property window-features
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "An associated WebKitWebWindowFeatures instance")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property transparent
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether content has a transparent background")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property zoom-level
  (of-object "WebKitWebView")
  (prop-type "GParamFloat")
  (docs "The level of zoom of the content")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property full-content-zoom
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the full content is scaled when zooming")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property load-status
  (of-object "WebKitWebView")
  (prop-type "GParamEnum")
  (docs "Determines the current status of the load")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property progress
  (of-object "WebKitWebView")
  (prop-type "GParamDouble")
  (docs "Determines the current progress of the load")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property encoding
  (of-object "WebKitWebView")
  (prop-type "GParamString")
  (docs "The default encoding of the web view")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property custom-encoding
  (of-object "WebKitWebView")
  (prop-type "GParamString")
  (docs "The custom encoding of the web view")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

