;; From WebKitWebView

(define-signal load-committed
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
  )
)

(define-signal title-changed
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("const-gchar*" "p1")
  )
)

(define-signal hovering-over-link
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("const-gchar*" "p1")
  )
)

(define-signal navigation-requested
  (of-object "WebKitWebView")
  (return-type "gint")
  (when "last")
  (parameters
    '("GObject*" "p0")
    '("GObject*" "p1")
  )
)

(define-signal window-object-cleared
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("gpointer" "p1")
    '("gpointer" "p2")
  )
)

(define-signal load-started
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
  )
)

(define-signal load-progress-changed
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("gint" "p0")
  )
)

(define-signal load-finished
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
  )
)

(define-signal populate-popup
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkMenu*" "p0")
  )
)

(define-signal status-bar-text-changed
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
  )
)

(define-signal icon-loaded
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal selection-changed
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal console-message
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("gint" "p1")
    '("const-gchar*" "p2")
  )
)

(define-signal script-alert
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("const-gchar*" "p1")
  )
)

(define-signal script-confirm
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("const-gchar*" "p1")
    '("gboolean" "p2")
  )
)

(define-signal script-prompt
  (of-object "WebKitWebView")
  (return-type "gboolean")
  (when "last")
  (parameters
    '("WebKitWebFrame*" "p0")
    '("const-gchar*" "p1")
    '("const-gchar*" "p2")
    '("gpointer" "p3")
  )
)

(define-signal select-all
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal cut-clipboard
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal copy-clipboard
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal paste-clipboard
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
)

(define-signal set-scroll-adjustments
  (of-object "WebKitWebView")
  (return-type "void")
  (when "last")
  (parameters
    '("GtkAdjustment*" "p0")
    '("GtkAdjustment*" "p1")
  )
)

(define-property user-data
  (of-object "WebKitWebView")
  (prop-type "GParamPointer")
  (docs "Anonymous User Data Pointer")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "WebKitWebView")
  (prop-type "GParamString")
  (docs "The name of the widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "The parent widget of this widget. Must be a Container widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "WebKitWebView")
  (prop-type "GParamInt")
  (docs "Override for width request of the widget, or -1 if natural request should be used")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "WebKitWebView")
  (prop-type "GParamInt")
  (docs "Override for height request of the widget, or -1 if natural request should be used")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is visible")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget responds to input")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the application will paint directly on the widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget can accept the input focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget has the input focus")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is the focus widget within the toplevel")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget can be the default widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is the default widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "If TRUE, the widget will receive the default action when it is focused")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the widget is part of a composite widget")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property style
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "The style of the widget, which contains information about how it will look (colors etc)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property events
  (of-object "WebKitWebView")
  (prop-type "GParamFlags")
  (docs "The event mask that decides what kind of GdkEvents this widget gets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extension-events
  (of-object "WebKitWebView")
  (prop-type "GParamEnum")
  (docs "The mask that decides what kind of extension events this widget gets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-show-all
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether gtk_widget_show_all() should not affect this widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether this widget has a tooltip")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-markup
  (of-object "WebKitWebView")
  (prop-type "GParamString")
  (docs "The contents of the tooltip for this widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "WebKitWebView")
  (prop-type "GParamString")
  (docs "The contents of the tooltip for this widget")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border-width
  (of-object "WebKitWebView")
  (prop-type "GParamUInt")
  (docs "The width of the empty border outside the containers children")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "WebKitWebView")
  (prop-type "GParamEnum")
  (docs "Specify how resize events are handled")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "Can be used to add a new child to the container")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property copy-target-list
  (of-object "WebKitWebView")
  (prop-type "GParamBoxed")
  (docs "The list of targets this Web view supports for copying to the clipboard")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property paste-target-list
  (of-object "WebKitWebView")
  (prop-type "GParamBoxed")
  (docs "The list of targets this Web view supports for pasting to the clipboard")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property editable
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether content can be modified by the user")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property settings
  (of-object "WebKitWebView")
  (prop-type "GParamObject")
  (docs "An associated WebKitWebSettings instance")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property transparent
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether content has a transparent background")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property zoom-level
  (of-object "WebKitWebView")
  (prop-type "GParamFloat")
  (docs "The level of zoom of the content")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property full-content-zoom
  (of-object "WebKitWebView")
  (prop-type "GParamBoolean")
  (docs "Whether the full content is scaled when zooming")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From WebKitNetworkRequest

;; From WebKitWebBackForwardList

;; From WebKitWebFrame

(define-signal cleared
  (of-object "WebKitWebFrame")
  (return-type "void")
  (when "last")
)

(define-signal load-committed
  (of-object "WebKitWebFrame")
  (return-type "void")
  (when "last")
)

(define-signal load-done
  (of-object "WebKitWebFrame")
  (return-type "void")
  (when "last")
  (parameters
    '("gboolean" "p0")
  )
)

(define-signal title-changed
  (of-object "WebKitWebFrame")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
  )
)

(define-signal hovering-over-link
  (of-object "WebKitWebFrame")
  (return-type "void")
  (when "last")
  (parameters
    '("const-gchar*" "p0")
    '("const-gchar*" "p1")
  )
)

(define-property name
  (of-object "WebKitWebFrame")
  (prop-type "GParamString")
  (docs "The name of the frame")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property title
  (of-object "WebKitWebFrame")
  (prop-type "GParamString")
  (docs "The document title of the frame")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property uri
  (of-object "WebKitWebFrame")
  (prop-type "GParamString")
  (docs "The current URI of the contents displayed by the frame")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From WebKitWebHistoryItem

;; From WebKitWebSettings

(define-property default-encoding
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default encoding used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property cursive-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default Cursive font family used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property default-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default font family used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property fantasy-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default Fantasy font family used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property monospace-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default font family used to display monospace text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sans-serif-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default Sans Serif font family used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property serif-font-family
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The default Serif font family used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property default-font-size
  (of-object "WebKitWebSettings")
  (prop-type "GParamInt")
  (docs "The default font size used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property default-monospace-font-size
  (of-object "WebKitWebSettings")
  (prop-type "GParamInt")
  (docs "The default font size used to display monospace text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property minimum-font-size
  (of-object "WebKitWebSettings")
  (prop-type "GParamInt")
  (docs "The minimum font size used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property minimum-logical-font-size
  (of-object "WebKitWebSettings")
  (prop-type "GParamInt")
  (docs "The minimum logical font size used to display text.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property auto-load-images
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Load images automatically.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property auto-shrink-images
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Automatically shrink standalone images to fit.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property print-backgrounds
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Whether background images should be printed.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-scripts
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Enable embedded scripting languages.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property enable-plugins
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Enable embedded plugin objects.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resizable-text-areas
  (of-object "WebKitWebSettings")
  (prop-type "GParamBoolean")
  (docs "Whether text areas are resizable.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property user-stylesheet-uri
  (of-object "WebKitWebSettings")
  (prop-type "GParamString")
  (docs "The URI of a stylesheet that is applied to every page.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property zoom-step
  (of-object "WebKitWebSettings")
  (prop-type "GParamFloat")
  (docs "The value by which the zoom level is changed when zooming in or out.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

