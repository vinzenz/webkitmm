/* $Id: column.ccg,v 1.5 2006/11/06 23:38:35 murrayc Exp $ */
// -*- C++ -*- // this is for the .ccg, I realize gensig puts one in

/* datamodel.cc
 * 
 * Copyright 2003 libgdamm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <libgda/gda-column.h>
#include <libgda/gda-enum-types.h>

namespace Gnome
{

namespace Gda
{
  
Value Column::get_default_value() const
{
  return Value(gda_column_get_default_value(const_cast<GdaColumn*>(gobj())));
}

bool Column::equal(const Glib::RefPtr<const Column>& src) const
{
  if(!src)
    return false;

  const bool result = get_title() == src->get_title() &&
                get_defined_size() == src->get_defined_size() &&
                get_name() == src->get_name() &&
                get_table() == src->get_table() &&
                get_caption() == src->get_caption() &&
                get_scale() == src->get_scale() &&
                get_dbms_type() == src->get_dbms_type() &&
                get_g_type() == src->get_g_type() &&
                get_allow_null() == src->get_allow_null() &&
                get_primary_key() == src->get_primary_key() &&
                get_unique_key() == src->get_unique_key() &&
                get_references() == src->get_references() &&
                get_auto_increment() == src->get_auto_increment() &&
                get_position() == src->get_position() &&
                get_default_value() == src->get_default_value();

  return result;
}


} // namespace Gda

} // namespace Gnome

