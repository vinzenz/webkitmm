/* $Id: entityfield.hg,v 1.1 2006/11/08 00:07:37 murrayc Exp $ */
// -*- C++ -*- // this is for the .hg, I realize gensig puts one in

/* entityfield.h
 *
 * Copyright 2003 libgdamm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <libgdamm/object.h>
#include <libgdamm/dicttype.h>
#include <glibmm/object.h>
#include <libgda/gda-entity-field.h>

_DEFS(libgdamm,libgda)
_PINCLUDE(glibmm/private/object_p.h)

namespace Gnome
{

namespace Gda
{

class Entity;

/** Base class to represent a generic field (for tables' fields, etc).
 *
 * @ingroup LesserUsed
 */
class EntityField : public Glib::Interface
{
  _CLASS_INTERFACE(EntityField, GdaEntityField, GDA_ENTITY_FIELD, GdaEntityFieldIface)
protected:

public:

  _WRAP_METHOD(Glib::RefPtr<Entity> get_entity(), gda_entity_field_get_entity, refreturn)
  _WRAP_METHOD(Glib::RefPtr<const Entity> get_entity() const, gda_entity_field_get_entity, constversion)

  _WRAP_METHOD(GType get_g_type() const, gda_entity_field_get_g_type)

  _WRAP_METHOD(Glib::RefPtr<DictType> get_dict_type(), gda_entity_field_get_dict_type, refreturn)
  _WRAP_METHOD(Glib::RefPtr<const DictType> get_dict_type() const, gda_entity_field_get_dict_type, constversion)
  _WRAP_METHOD(void set_dict_type(const Glib::RefPtr<DictType>& type), gda_entity_field_set_dict_type)

  _WRAP_METHOD(Glib::ustring get_name() const, gda_entity_field_get_name)
  _WRAP_METHOD(Glib::ustring get_description() const, gda_entity_field_get_description)

//TODO: Watch out, this might not do correct reference counting:
  //_WRAP_VFUNC(Glib::RefPtr<Entity> get_entity(), get_entity)
  _WRAP_VFUNC(GType get_g_type(), get_g_type)
  _WRAP_VFUNC(void set_dict_type(const Glib::RefPtr<DictType>& type), set_dict_type)
  //_WRAP_VFUNC(Glib::RefPtr<DictType> get_dict_type(), get_dict_type)
  _WRAP_VFUNC(Glib::ustring get_alias(), get_alias)
};

} // namespace Gda
} // namespace Gnome

