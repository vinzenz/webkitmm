// -*- C++ -*- // this is for the .hg, I realize gensig puts one in

/* datamodelfiltersql.h
 *
 * Copyright 2007 libgdamm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <libgdamm/datamodelrow.h>

_DEFS(libgdamm,libgda)
_PINCLUDE(libgdamm/private/datamodelrow_p.h)

namespace Gnome
{

namespace Gda
{

/** Filtering data from one or several DataModel objects.
 * This object implements simple SQL "SELECT" queries accessing data stored in various DataModel objects which it is instructed to use.
 *
 * @ingroup DataModels
 */
class DataModelFilterSQL
 : public DataModelRow
{
  _CLASS_GOBJECT(DataModelFilterSQL, GdaDataModelFilterSQL, GDA_DATA_MODEL_FILTER_SQL, Gda::DataModelRow, GdaDataModelRow)
protected:
  _CTOR_DEFAULT()
  _IGNORE(gda_data_model_filter_sql_new)

public:
  _WRAP_CREATE()

  _WRAP_METHOD(void add_source(const Glib::ustring& name, const Glib::RefPtr<DataModel>& source), gda_data_model_filter_sql_add_source)
  _WRAP_METHOD(void set_sql(const Glib::ustring& sql), gda_data_model_filter_sql_set_sql)
  _WRAP_METHOD(bool run(), gda_data_model_filter_sql_run)
};

} // namespace Gda
} // namespace Gnome

