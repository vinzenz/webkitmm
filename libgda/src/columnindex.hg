/* $Id: columnindex.hg,v 1.2 2006/06/11 08:12:29 murrayc Exp $ */
// -*- C++ -*- // this is for the .hg, I realize gensig puts one in

/* datamodel.h
 *
 * Copyright 2003 libgdamm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <libgda/gda-column-index.h>

_DEFS(libgdamm,libgda)
_PINCLUDE(glibmm/private/object_p.h)

namespace Gnome
{

namespace Gda
{

_WRAP_ENUM(Sorting, GdaSorting)

class Row;

/** DataModel column indexes â€” Management of DataModel column index attributes.
 *
 * @ingroup DataHandlers
 */
class ColumnIndex : public Glib::Object
{
   _CLASS_GOBJECT(ColumnIndex, GdaColumnIndex, GDA_COLUMN_INDEX, Glib::Object, GObject)
protected:
  _CTOR_DEFAULT()
  _IGNORE(gda_column_index_new)

public:
  _WRAP_CREATE()

  //TODO: Is this usable?:
  _WRAP_EQUAL(gda_column_index_equal)
  _IGNORE(gda_column_index_equal)

  _WRAP_METHOD(Glib::RefPtr<ColumnIndex> copy() const, gda_column_index_copy)

  _WRAP_METHOD(Glib::ustring get_column_name() const, gda_column_index_get_column_name)
  _WRAP_METHOD(void set_column_name(const Glib::ustring& column_name), gda_column_index_set_column_name)
  _WRAP_METHOD(long get_defined_size() const, gda_column_index_get_defined_size)
  _WRAP_METHOD(void set_defined_size(long size), gda_column_index_set_defined_size)
  _WRAP_METHOD(Sorting get_sorting() const, gda_column_index_get_sorting)
  _WRAP_METHOD(void set_sorting(Sorting sorting), gda_column_index_set_sorting)
  _WRAP_METHOD(Glib::ustring get_references() const, gda_column_index_get_references)
  _WRAP_METHOD(void set_references(const Glib::ustring& ref), gda_column_index_set_references)
};

} // namespace Gda
} // namespace Gnome

