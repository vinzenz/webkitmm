// -*- C++ -*- // this is for the .ccg, I realize gensig puts one in

/* datahandler.cc
 * 
 * Copyright 2003 libgdamm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <libgdamm/serverprovider.h>
#include <libgda/gda-data-model.h>
#include <libgda/gda-data-model-extra.h>
#include <libgda/gda-enum-types.h>


namespace Gnome
{

namespace Gda
{

Value DataHandler::get_value_from_sql(const Glib::ustring& sql, GType type) const
{
  return Value(gda_data_handler_get_value_from_sql(const_cast<GdaDataHandler*>(gobj()), sql.c_str(), type));
}

Value DataHandler::get_value_from_str(const Glib::ustring& str, GType type) const
{
  GValue* cvalue = gda_data_handler_get_value_from_str(const_cast<GdaDataHandler*>(gobj()), str.c_str(), type);
  Value value(cvalue);

  // The C documentation says that it returns a new value:
  if(G_IS_VALUE(cvalue)) g_value_unset(cvalue);
  return value;
}

Value DataHandler::get_sane_init_value(GType type) const
{
  GValue* cvalue = gda_data_handler_get_sane_init_value(const_cast<GdaDataHandler*>(gobj()), type);
  Value value(cvalue);

  // The C documentation says that it returns a new value:
  if(G_IS_VALUE(cvalue)) g_value_unset(cvalue);
  return value;
}

} /* namespace Gda */

} /* namespace Gnome */

